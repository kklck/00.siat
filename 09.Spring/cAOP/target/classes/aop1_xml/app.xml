<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

<context:component-scan base-package="aop1_xml"></context:component-scan>
<!-- target Bean 생성 -->
<bean id="targetBean" class="aop1_xml.MessageBeanImpl"/>
<!-- 2. advice Bean 생성 -->
<bean id="advice" class="aop1_xml.LoggingAdvice"></bean>
<!-- 3. AOP 환경 설정 -->
<aop:config>
	<aop:pointcut expression="execution(public * aop1_xml.*.*Hello(..))" id="pointCut"/><!-- public * : 리턴값 아무거나, (..) : 인자값 아무거나 -->
	<aop:aspect ref="advice">
		<aop:before method="before" pointcut-ref="pointCut"/><!-- before 함수에 pointCut 인자를 줌-->
		<aop:around method="around" pointcut-ref="pointCut"/>
		<aop:after method="after" pointcut-ref="pointCut"/>
	</aop:aspect>
</aop:config>
</beans>
